sudo: required
services:
  - docker

language: c

cache:
    directories:
      - $HOME/.cache

git:
    depth: 100500

matrix:
  include:
    - compiler: ": Lua51"
      env: LUA="lua 5.1"
    - compiler: ": Lua52"
      env: LUA="lua 5.2"
    - compiler: ": Lua53"
      env: LUA="lua 5.3"
    - compiler: ": LuaJIT20"
      env: LUA="luajit 2.0"
    - compiler: ": LuaJIT21"
      env: LUA="luajit 2.1"
    - env: OS=el DIST=6 PRODUCT=tarantool-luacheck
    - env: OS=el DIST=7 PRODUCT=tarantool-luacheck
    - env: OS=fedora DIST=26 PRODUCT=tarantool-luacheck
    - env: OS=fedora DIST=27 PRODUCT=tarantool-luacheck

install:
  - |
    if [ -n "${LUA}" ]; then
        pip install --user hererocks
        pip install --user codecov
        sudo apt-get install luarocks
        hererocks here --$LUA -r https://github.com/mpeterv/luarocks@upgrade-install
        export PATH="$PWD/here/bin:$PATH"
        luarocks install lanes --upgrade --upgrade-deps
        luarocks install busted --upgrade --upgrade-deps
        luarocks install cluacov --upgrade --upgrade-deps
    fi;
script:
  - |
    if [ -n "${LUA}" ]; then
        busted -c
        lua -e 'package.path="./src/?.lua;./src/?/init.lua;"..package.path' \
            -lluacov bin/luacheck.lua luacheck-dev-1.rockspec -j2
        lua -e 'package.preload.lfs=error;package.path="./src/?.lua;./src/?/init.lua;"..package.path' \
            -lluacov bin/luacheck.lua src | grep 'I/O error'
        lua -e 'package.preload.lanes=error;package.path="./src/?.lua;./src/?/init.lua;"..package.path' \
            -lluacov bin/luacheck.lua --version | grep 'Not found'
        lua install.lua path/to/luacheck
        mv src src2
        path/to/luacheck/bin/luacheck spec/*.lua
        mv src2 src
    else
        # Luacheck has a major.minor.patch versioning with unannotated tags.
        # Packpack can't handle it automaticaly, because it expects
        # annotated tags. We had to pass version by setting VERSION.
        # We set VERSION like: major.minor.patch.number_of_commits above
        # last major.minor.patch tag.
        VERSION=`git describe --tags | sed -e 's/\(.*\)-.*/\1/' -e 's/-/./'`
        git clone https://github.com/packpack/packpack.git packpack;
        VERSION=$VERSION packpack/packpack;
    fi;

after_script:
    if [ -n "${LUA}" ]; then
        luacov
        codecov -f luacov.report.out -X gcov
    fi;

before_deploy:
  - ls -l build/

deploy:
  # Deploy packages to PackageCloud
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "1_9"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && -n "${DIST}" && -n "${PACKAGECLOUD_TOKEN}"
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "1_10"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && -n "${DIST}" && -n "${PACKAGECLOUD_TOKEN}"
  - provider: packagecloud
    username: ${PACKAGECLOUD_USER}
    repository: "2_0"
    token: ${PACKAGECLOUD_TOKEN}
    dist: ${OS}/${DIST}
    package_glob: build/*.{rpm,deb}
    skip_cleanup: true
    on:
      branch: master
      condition: -n "${OS}" && -n "${DIST}" && -n "${PACKAGECLOUD_TOKEN}"

notifications:
  email:
    recipients:
      - build@tarantool.org
    on_success: change
    on_failure: always
